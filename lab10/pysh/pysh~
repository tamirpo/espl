#!/usr/bin/env python

import os, os.path, sys, getpass, shlex, subprocess

home=os.getenv('HOME')

def getcwd():
    "like os.getcwd(), but collapses the home directory prefix into ~"
    cwd = os.getcwd()
    if cwd.startswith(home):
        cwd = '~'+cwd[len(home):]
    return cwd
    
def runCommand(argv):
    myInput = sys.stdin
    myOutput = sys.stdout
    try:
      pipeIndex = argv.index('|')
      p1 = subprocess.Popen(argv[:pipeIndex], stdout=subprocess.PIPE)
      p2 = subprocess.Popen(argv[pipeIndex+1:], stdin=p1.stdout, stdout=myOutput)
      p1.stdout.close()  # Allow p1 to receive a SIGPIPE if p2 exits.
      output = p2.communicate()[0]
    except ValueError:
      try:
	if argv[-2]=='<': #input redirection
	  myInput=open(argv[-1],'w')
	elif argv[-2]=='>': #output redirection
	  myOutput=open(argv[-1],'w')
      except IndexError:  #not an input/output redirection
	print "normal"
	
      subprocess.call(args=argv,stdin=myInput,stdout=myOutput, shell=True)
    return

while True:
    print "%s@%s>" % (getpass.getuser(), getcwd()),

    argv = None
    try:
        argv = shlex.split(raw_input())
    except EOFError:
        print
        break                             # end of file from user, e.g. Ctrl-D

    if not argv:
        continue # empty command

    if argv[0] in ['exit', 'quit', 'bye']:
        break
    elif argv[0]=='cd':
        try:
            os.chdir(os.path.expanduser(argv[1])) # expand ~ to home directory
        except IndexError:                   # no arguments, chdir to home dir
            os.chdir(home)
        except OSError, s:
            print >>sys.stderr, "chdir: %s" % s
    else:
	runCommand(argv)

# goodbye message
goodbye = "have a good sunny day, see you back soon"
print "*"+"-"*(len(goodbye)+2)+"*"
print "| %s |" % goodbye
print "*"+"-"*(len(goodbye)+2)+"*"
